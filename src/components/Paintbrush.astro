---
// Components
import Icon from "@xtreat/astro-iconify"

// Islands
import { motion } from "motion/react"
---
<motion.button
    className="z-50 absolute bottom-5 left-5 size-16 disabled:pointer-events-none hover:text-pink-400 enabled:text-gray-700 disabled:text-gray-900"
    id="motion-brush"
    whileHover={{ scale: 1.1, cursor:"none"}}
    whileTap={{ scale: 0.9, rotate: 20, cursor:"none" }}
    whileDrag={{ scale: 0.9, rotate: 20, cursor:"none" }}
    dragConstraints={{ bottom: 0, right: 0, top: 0, left: 0 }}
    dragElastic={1}
    drag
    client:only="react"
>
    <Icon class="size-full" icon="svg-spinners:pulse-rings-2" slot="fallback" />
    <Icon class="size-full" flip="horizontal" icon="icon-park-solid:format-brush"  />
</motion.button>

<script>
import { $coloredElements } from '../scripts/stores/coloredElements.ts';
import bucketSFX from '../assets/sound/bucket.mp3';
const audio = new Audio(bucketSFX);
audio.volume = 0.5;

async function disableBucket() {
    await new Promise((r) => setTimeout(r, 150));
    if($coloredElements.get() >= 10)
        found.setAttribute('disabled', '');
}

const handleColoring = (event : Event) => {
    const canColor : Element[] = document.elementsFromPoint(event.clientX, event.clientY);
    canColor?.forEach((element : Element) => {
        if(element.classList.contains('grayscale') && element.classList.contains('remove-grayscale')) {
            element.classList.remove('grayscale');
            audio.play();
            $coloredElements.set($coloredElements.get() + 1);
            disableBucket();
        }
    });
};

let found : Element;
const interval = setInterval(() => {
    const paintBrush = document.querySelector('#motion-brush');
    paintBrush?.addEventListener('mousemove', handleColoring);
    if(paintBrush) {found = paintBrush; clearInterval(interval);}
}, 200)

const listener = $coloredElements.listen((cur) => {
    if(cur < 10 && found.hasAttribute('disabled')){
        found?.removeAttribute('disabled');
    }
});
</script>

